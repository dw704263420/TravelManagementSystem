<?xml version="1.0" encoding="GBK"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--全局3、将configuration更改成mapper sql方法和语句均写在一个命名空间的mapper下-->
<mapper namespace="com.kuang.dao.ProductMapper">
<resultMap id="productDetail" type="Product">
    <id property="id" column="id"/>
    <result column="productNum" property="productNum"/>
    <result column="productName" property="productName"/>
    <result column="cityName" property="cityName"/>
    <result column="DepartureTIme" property="departureTime"/>
    <result column="productPrice" property="productPrice"/>
    <result column="productDesc" property="productDesc"/>
    <result column="isThemeTour" property="isThemeTour"/>
    <result column="counts" property="counts"/>
    <result column="cid" property="cid"/>
    <result column="rimage" property="rimage"/>
    <result column="sid" property="sid"/>
    <result column="sourceId" property="sourceId"/>
    <association property="isFavourTimes" column="id" select="com.kuang.dao.FavouriteMapper.findProductFavouriteTimes"/>
    <association property="seller" column="sid" javaType="Seller" select="com.kuang.dao.SellerMapper.findSellerBySid"/>
    <association property="routeImgList" column="id" javaType="list"  select="com.kuang.dao.RouteImgMapper.findProductImg"/>
</resultMap>
    <resultMap id="productFavo" type="Product">
        <id property="id" column="id"/>
        <result column="productName" property="productName"/>
        <result column="productPrice" property="productPrice"/>
        <result column="productDesc" property="productDesc"/>
        <result column="rimage" property="rimage"/>
        <association property="isFavourTimes" column="id" select="com.kuang.dao.FavouriteMapper.findProductFavouriteTimes"/>
        </resultMap>
    <select id="findAll" resultType="Product">
        select * from  ssm.product
    </select>
    <!--    写完之后，要将bookMapper.xml绑定到配置文件中-->

    <insert id="saveProduct" parameterType="Product">
        insert into ssm.product (productNum, productName, cityName, DepartureTime, productPrice, productDesc, productStatus) values (#{productNum},#{productName},#{cityName},#{departureTime},#{productPrice},#{productDesc},#{productStatus})
    </insert>
    <select id="findProductById" resultType="Product">
        select * from  ssm.product where id=#{id}
    </select>

    <update id="updateProduct" parameterType="Product">
        update ssm.product
        set productNum=#{productNum},productName=#{productName},cityName =#{cityName}
        ,cid=#{cid},productPrice=#{productPrice},productDesc=#{productDesc},productStatus=#{productStatus}
        where id =#{id}
    </update>
    <delete id="delById" >
        delete  from  ssm.product where id = #{id}
    </delete>
    <select id="findAllByWords" resultType="Product">
        select * from ssm.product where productName like CONCAT('%',#{keyWord},'%') and cid = #{cid}
    </select>

    <select id="findProdectDetail" resultMap="productDetail">
        select * from ssm.product where id = #{id}
    </select>
<select id="findProductByUserFavourite" resultMap="productFavo" parameterType="map">
    select * from product
    <where>
        <foreach collection="favoMap"  item="id" open="and (" close=")" separator="or">
            id=#{id}
        </foreach>
    </where>
</select>
    <select id="findProductByRand" resultType="Product">
        select * from ssm.product order by rand() limit #{num}
    </select>
</mapper>